name: Setup
description: Setup environment for CI

inputs:
  toolchain:
    description: Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
    required: true
    default: stable
  targets:
    description: Comma-separated list of target triples to install for this toolchain
    required: false
  target:
    description: Alias for `targets`
    required: false
  components:
    description: Comma-separated list of components to be additionally installed
    required: false

runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
        echo $HOME
        echo ${{ runner.os }}

    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ inputs.toolchain }}
        targets: ${{ inputs.targets }}
        target: ${{ inputs.target }}
        components: ${{ inputs.components }}

    - if: runner.os == 'Linux'
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: librust-alsa-sys-dev
        version: 1.0

    - if: runner.os == 'Linux'
      uses: actions/cache@v4
      with:
        path: /home/runner/.cache/ort.pyke.io
        key: ${{ runner.os }}-ort.pyke.io

    - if: runner.os == 'macOS'
      uses: actions/cache@v4
      with:
        path: /Users/runner/Library/Caches/ort.pyke.io
        key: ${{ runner.os }}-ort.pyke.io

    - if: runner.os == 'Windows'
      uses: actions/cache@v4
      with:
        path: /c/Users/runneradmin/AppData/ort.pyke.io
        key: ${{ runner.os }}-ort.pyke.io

    - if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        echo "OPENSSL_SRC_PERL=$((where.exe perl)[0])" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ runner.os }}-rust-cache
